@tailwind base; /* Contains fundamental reset and normalization styles */
@tailwind components; /* Houses reusable component styles for buttons, cards, forms, etc. */

.btn {
    @apply py-4 px-2 text-white bg-purple-900 rounded-lg hover:bg-sky-500 hover:text-black
}
/* we are writing @apply to just apply all the tailwind directive written to
multiple component using a custom class.

It is mainly useful while having a compnent of same style but a lot of it 
example a calculator.*/

@tailwind utilities;


/* Also adding custom class means writing your own css and not just using @apply directive */
/* Adding Custom Classes Before Utility Layer:

    Benefits:
        Precedence: Your custom classes take priority, ensuring they override utilities if needed.
        Organization: Clear separation of custom styles from Tailwind's defaults.
        Maintainability: Easier to manage and update custom styles without conflicts.

Adding Custom Classes After Utility Layer:

    Potential Issues:
        Specificity Wars: You might need highly specific selectors to override utilities, making CSS harder to read and maintain.
        Accidental Overrides: Utilities could unintentionally override custom styles, leading to unexpected results. */


  